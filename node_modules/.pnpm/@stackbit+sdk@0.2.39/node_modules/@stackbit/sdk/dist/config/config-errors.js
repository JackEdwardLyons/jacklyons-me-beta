"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigPresetsError = exports.ConfigValidationError = exports.ConfigLoadError = void 0;
class ConfigLoadError extends Error {
    constructor(message, { originalError } = {}) {
        super(message);
        this.name = 'ConfigLoadError';
        if (originalError) {
            this.originalError = originalError;
            this.stack = originalError.stack;
        }
    }
}
exports.ConfigLoadError = ConfigLoadError;
class ConfigValidationError extends Error {
    constructor({ message, type, fieldPath, normFieldPath, value }) {
        super(message);
        this.name = 'ConfigValidationError';
        this.type = type;
        this.fieldPath = fieldPath;
        this.normFieldPath = normFieldPath || fieldPath;
        this.value = value;
        // redefine "message" as enumerable, this helps seeing the provided and the expected message in failed Jest's toMatchObject calls
        Object.defineProperty(this, 'message', { value: message, writable: true, enumerable: true, configurable: true });
    }
}
exports.ConfigValidationError = ConfigValidationError;
class ConfigPresetsError extends Error {
    constructor(message) {
        super(message);
        this.name = 'ConfigPresetsError';
    }
}
exports.ConfigPresetsError = ConfigPresetsError;
//# sourceMappingURL=config-errors.js.map