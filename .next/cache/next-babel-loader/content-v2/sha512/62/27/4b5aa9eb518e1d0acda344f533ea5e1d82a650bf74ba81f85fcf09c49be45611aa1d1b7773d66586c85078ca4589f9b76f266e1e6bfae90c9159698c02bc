{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/components/GridSection.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport _ from \"lodash\";\nimport Image from \"next/image\";\nimport { withPrefix, markdownify } from \"../utils\";\nimport CtaButtons from \"./CtaButtons\";\n\nvar GridSection = /*#__PURE__*/function (_React$Component) {\n  _inherits(GridSection, _React$Component);\n\n  var _super = _createSuper(GridSection);\n\n  function GridSection() {\n    _classCallCheck(this, GridSection);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GridSection, [{\n    key: \"renderGridItem\",\n    value: function renderGridItem(gridItem, index) {\n      var title = _.get(gridItem, \"title\");\n\n      var subtitle = _.get(gridItem, \"subtitle\");\n\n      var content = _.get(gridItem, \"content\");\n\n      var image = _.get(gridItem, \"image\");\n\n      var imageAlt = _.get(gridItem, \"image_alt\", \"\");\n\n      var actions = _.get(gridItem, \"actions\");\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell card\",\n        children: [image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__image\",\n          style: {\n            position: \"relative\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            layout: \"fill\",\n            src: withPrefix(image),\n            alt: imageAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), title && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card__title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 19\n        }, this), subtitle && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__subtitle\",\n          children: subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 22\n        }, this), content && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__body\",\n          children: markdownify(content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), !_.isEmpty(actions) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__actions button-group\",\n          children: /*#__PURE__*/_jsxDEV(CtaButtons, {\n            actions: actions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var section = _.get(this.props, \"section\");\n\n      var sectionId = _.get(section, \"section_id\");\n\n      var title = _.get(section, \"title\");\n\n      var subtitle = _.get(section, \"subtitle\");\n\n      var gridItems = _.get(section, \"grid_items\");\n\n      var colNumber = _.get(section, \"col_number\", \"three\");\n\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        id: sectionId,\n        className: \"section section--grid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container container--lg\",\n          children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section__title line-top\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), subtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"section__subtitle\",\n            children: subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 24\n          }, this), !_.isEmpty(gridItems) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid--col-\".concat(colNumber),\n            children: _.map(gridItems, function (gridItem, index) {\n              return _this.renderGridItem(gridItem, index);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return GridSection;\n}(React.Component);\n\nexport { GridSection as default };","map":{"version":3,"sources":["/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/components/GridSection.js"],"names":["React","_","Image","withPrefix","markdownify","CtaButtons","GridSection","gridItem","index","title","get","subtitle","content","image","imageAlt","actions","position","isEmpty","section","props","sectionId","gridItems","colNumber","map","renderGridItem","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport Image from \"next/image\";\nimport { withPrefix, markdownify } from \"../utils\";\nimport CtaButtons from \"./CtaButtons\";\n\nexport default class GridSection extends React.Component {\n  renderGridItem(gridItem, index) {\n    const title = _.get(gridItem, \"title\");\n    const subtitle = _.get(gridItem, \"subtitle\");\n    const content = _.get(gridItem, \"content\");\n    const image = _.get(gridItem, \"image\");\n    const imageAlt = _.get(gridItem, \"image_alt\", \"\");\n    const actions = _.get(gridItem, \"actions\");\n\n    return (\n      <div key={index} className=\"cell card\">\n        {image && (\n          <div className=\"card__image\" style={{ position: \"relative\" }}>\n            <Image layout=\"fill\" src={withPrefix(image)} alt={imageAlt} />\n          </div>\n        )}\n        {title && <h3 className=\"card__title\">{title}</h3>}\n        {subtitle && <div className=\"card__subtitle\">{subtitle}</div>}\n        {content && <div className=\"card__body\">{markdownify(content)}</div>}\n        {!_.isEmpty(actions) && (\n          <div className=\"card__actions button-group\">\n            <CtaButtons actions={actions} />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const section = _.get(this.props, \"section\");\n    const sectionId = _.get(section, \"section_id\");\n    const title = _.get(section, \"title\");\n    const subtitle = _.get(section, \"subtitle\");\n    const gridItems = _.get(section, \"grid_items\");\n    const colNumber = _.get(section, \"col_number\", \"three\");\n\n    return (\n      <section id={sectionId} className=\"section section--grid\">\n        <div className=\"container container--lg\">\n          {title && <h2 className=\"section__title line-top\">{title}</h2>}\n          {subtitle && <p className=\"section__subtitle\">{subtitle}</p>}\n          {!_.isEmpty(gridItems) && (\n            <div className={`grid grid--col-${colNumber}`}>\n              {_.map(gridItems, (gridItem, index) =>\n                this.renderGridItem(gridItem, index)\n              )}\n            </div>\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}