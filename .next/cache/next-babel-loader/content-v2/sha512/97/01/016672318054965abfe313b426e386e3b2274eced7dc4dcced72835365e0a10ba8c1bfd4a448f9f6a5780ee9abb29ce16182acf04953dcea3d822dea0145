{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/components/Header.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Router from 'next/router';\nimport _ from 'lodash';\nimport { Link, withPrefix, classNames, getPageUrl } from '../utils';\nimport Action from './Action';\n\nvar Header = /*#__PURE__*/function (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  var _super = _createSuper(Header);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _super.call(this, props);\n    _this.handleWindowResize = _this.handleWindowResize.bind(_assertThisInitialized(_this));\n    _this.handleRouteChange = _this.handleRouteChange.bind(_assertThisInitialized(_this));\n    _this.menuOpenRef = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('resize', this.handleWindowResize, true);\n      Router.events.on('routeChangeStart', this.handleRouteChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.handleWindowResize, true);\n      Router.events.off('routeChangeStart', this.handleRouteChange);\n    }\n  }, {\n    key: \"handleWindowResize\",\n    value: function handleWindowResize() {\n      var menuOpenElm = _.get(this.menuOpenRef, 'current.offsetParent');\n\n      if (menuOpenElm === null) {\n        document.body.classList.remove('js-nav-open');\n      }\n    }\n  }, {\n    key: \"handleRouteChange\",\n    value: function handleRouteChange() {\n      document.body.classList.remove('js-nav-open');\n    }\n  }, {\n    key: \"handleMenuToggle\",\n    value: function handleMenuToggle(event) {\n      event.preventDefault();\n      document.body.classList.toggle('js-nav-open');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var page = _.get(this.props, 'page');\n\n      var pageUrl = _.trim(getPageUrl(page), '/');\n\n      var config = _.get(this.props, 'config');\n\n      var header = _.get(config, 'header');\n\n      var logo = _.get(header, 'logo_img');\n\n      var logoAlt = _.get(header, 'logo_img_alt', '');\n\n      var title = _.get(header, 'title');\n\n      var hasNav = _.get(header, 'has_nav');\n\n      var navLinks = _.get(header, 'nav_links');\n\n      return /*#__PURE__*/_jsxDEV(\"header\", {\n        id: \"masthead\",\n        className: \"site-header container\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"navbar\",\n          \"aria-label\": \"Main Navigation\",\n          children: [logo ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navbar__logo\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: withPrefix('/'),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: withPrefix(logo),\n                alt: logoAlt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navbar__title\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: withPrefix('/'),\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), hasNav && !_.isEmpty(navLinks) && /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"navbar__open\",\n              className: \"navbar__toggle\",\n              ref: this.menuOpenRef,\n              onClick: this.handleMenuToggle.bind(this),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"screen-reader-text\",\n                children: \"Open Menu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon-menu\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"navbar__menu-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"navbar__scroller\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"navbar__close\",\n                  className: \"navbar__toggle\",\n                  onClick: this.handleMenuToggle.bind(this),\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"screen-reader-text\",\n                    children: \"Close Menu\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"icon-close\",\n                    \"aria-hidden\": \"true\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"navbar__menu menu\",\n                  children: _.map(navLinks, function (action, index) {\n                    var actionUrl = _.trim(_.get(action, 'url'), '/');\n\n                    var actionStyle = _.get(action, 'style', 'link');\n\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: classNames('menu__item', {\n                        'menu__item--current': pageUrl === actionUrl,\n                        'menu__item--button': actionStyle !== 'link'\n                      }),\n                      children: /*#__PURE__*/_jsxDEV(Action, {\n                        action: action\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 89,\n                        columnNumber: 53\n                      }, _this2)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 49\n                    }, _this2);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nexport { Header as default };","map":{"version":3,"sources":["/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/components/Header.js"],"names":["React","Router","_","Link","withPrefix","classNames","getPageUrl","Action","Header","props","handleWindowResize","bind","handleRouteChange","menuOpenRef","createRef","window","addEventListener","events","on","removeEventListener","off","menuOpenElm","get","document","body","classList","remove","event","preventDefault","toggle","page","pageUrl","trim","config","header","logo","logoAlt","title","hasNav","navLinks","isEmpty","handleMenuToggle","map","action","index","actionUrl","actionStyle","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Router from 'next/router';\nimport _ from 'lodash';\n\nimport { Link, withPrefix, classNames, getPageUrl } from '../utils';\nimport Action from './Action';\n\nexport default class Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleWindowResize = this.handleWindowResize.bind(this);\n        this.handleRouteChange = this.handleRouteChange.bind(this);\n        this.menuOpenRef = React.createRef();\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.handleWindowResize, true);\n        Router.events.on('routeChangeStart', this.handleRouteChange);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleWindowResize, true);\n        Router.events.off('routeChangeStart', this.handleRouteChange);\n    }\n\n    handleWindowResize() {\n        const menuOpenElm = _.get(this.menuOpenRef, 'current.offsetParent');\n        if (menuOpenElm === null) {\n            document.body.classList.remove('js-nav-open');\n        }\n    }\n\n    handleRouteChange() {\n        document.body.classList.remove('js-nav-open');\n    }\n\n    handleMenuToggle(event) {\n        event.preventDefault();\n        document.body.classList.toggle('js-nav-open');\n    }\n\n    render() {\n        const page = _.get(this.props, 'page');\n        const pageUrl = _.trim(getPageUrl(page), '/');\n        const config = _.get(this.props, 'config');\n        const header = _.get(config, 'header');\n        const logo = _.get(header, 'logo_img');\n        const logoAlt = _.get(header, 'logo_img_alt', '');\n        const title = _.get(header, 'title');\n        const hasNav = _.get(header, 'has_nav');\n        const navLinks = _.get(header, 'nav_links');\n\n        return (\n            <header id=\"masthead\" className=\"site-header container\">\n                <nav className=\"navbar\" aria-label=\"Main Navigation\">\n                    {logo ? (\n                        <div className=\"navbar__logo\">\n                            <Link href={withPrefix('/')}><img src={withPrefix(logo)} alt={logoAlt} /></Link>\n                        </div>\n                    ) : (\n                        <div className=\"navbar__title\">\n                            <Link href={withPrefix('/')}>{title}</Link>\n                        </div>\n                    )}\n                    {hasNav && !_.isEmpty(navLinks) && (\n                        <React.Fragment>\n                            <button id=\"navbar__open\" className=\"navbar__toggle\" ref={this.menuOpenRef} onClick={this.handleMenuToggle.bind(this)}>\n                                <span className=\"screen-reader-text\">Open Menu</span>\n                                <span className=\"icon-menu\" aria-hidden=\"true\" />\n                            </button>\n                            <div className=\"navbar__menu-container\">\n                                <div className=\"navbar__scroller\">\n                                    <button id=\"navbar__close\" className=\"navbar__toggle\" onClick={this.handleMenuToggle.bind(this)}>\n                                        <span className=\"screen-reader-text\">Close Menu</span>\n                                        <span className=\"icon-close\" aria-hidden=\"true\" />\n                                    </button>\n                                    <ul className=\"navbar__menu menu\">\n                                        {_.map(navLinks, (action, index) => {\n                                            const actionUrl = _.trim(_.get(action, 'url'), '/');\n                                            const actionStyle = _.get(action, 'style', 'link');\n                                            return (\n                                                <li\n                                                    key={index}\n                                                    className={classNames('menu__item', {\n                                                        'menu__item--current': pageUrl === actionUrl,\n                                                        'menu__item--button': actionStyle !== 'link'\n                                                    })}\n                                                >\n                                                    <Action action={action} />\n                                                </li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </React.Fragment>\n                    )}\n                </nav>\n            </header>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}