{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/components/FormField.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { classNames } from '../utils';\nexport default class FormField extends React.Component {\n  render() {\n    const section = _.get(this.props, 'section');\n\n    const hideLabels = _.get(section, 'hide_labels');\n\n    const field = _.get(this.props, 'field');\n\n    const inputType = _.get(field, 'input_type');\n\n    const name = _.get(field, 'name');\n\n    const defaultValue = _.get(field, 'default_value');\n\n    const options = _.get(field, 'options');\n\n    const required = _.get(field, 'is_required');\n\n    const label = _.get(field, 'label');\n\n    const labelId = `${name}-label`;\n    const attr = {};\n\n    if (label) {\n      attr['aria-labelledby'] = labelId;\n    }\n\n    if (required) {\n      attr.required = true;\n    }\n\n    if (defaultValue && inputType !== 'checkbox' && inputType !== 'select') {\n      attr.placeholder = defaultValue;\n    }\n\n    switch (inputType) {\n      case 'checkbox':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group form-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n            type: \"checkbox\",\n            id: name,\n            name: name\n          }, attr), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), label && /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: name,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this);\n\n      case 'select':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: name,\n            className: classNames({\n              'screen-reader-text': hideLabels\n            }),\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-select-wrap\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", _objectSpread(_objectSpread({\n              id: name,\n              name: name\n            }, attr), {}, {\n              children: [defaultValue && /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: defaultValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 50\n              }, this), _.map(options, (option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 37\n              }, this))]\n            }), void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this);\n\n      case 'textarea':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: name,\n            className: classNames({\n              'screen-reader-text': hideLabels\n            }),\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", _objectSpread({\n            name: name,\n            id: name,\n            rows: \"5\"\n          }, attr), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"animate-border\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: name,\n            className: classNames({\n              'screen-reader-text': hideLabels\n            }),\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n            type: inputType,\n            name: name,\n            id: name\n          }, attr), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"animate-border\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/components/FormField.js"],"names":["React","_","classNames","FormField","Component","render","section","get","props","hideLabels","field","inputType","name","defaultValue","options","required","label","labelId","attr","placeholder","map","option","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nimport { classNames } from '../utils';\n\nexport default class FormField extends React.Component {\n    render() {\n        const section = _.get(this.props, 'section');\n        const hideLabels = _.get(section, 'hide_labels');\n        const field = _.get(this.props, 'field');\n        const inputType = _.get(field, 'input_type');\n        const name = _.get(field, 'name');\n        const defaultValue = _.get(field, 'default_value');\n        const options = _.get(field, 'options');\n        const required = _.get(field, 'is_required');\n        const label = _.get(field, 'label');\n        const labelId = `${name}-label`;\n        const attr = {};\n        if (label) {\n            attr['aria-labelledby'] = labelId;\n        }\n        if (required) {\n            attr.required = true;\n        }\n        if (defaultValue && inputType !== 'checkbox' && inputType !== 'select') {\n            attr.placeholder = defaultValue;\n        }\n\n        switch (inputType) {\n            case 'checkbox':\n                return (\n                    <div className=\"form-group form-checkbox\">\n                        <input type=\"checkbox\" id={name} name={name} {...attr} />\n                        {label && <label htmlFor={name}>{label}</label>}\n                    </div>\n                );\n            case 'select':\n                return (\n                    <div className=\"form-group\">\n                        {label && <label htmlFor={name} className={classNames({ 'screen-reader-text': hideLabels })}>{label}</label>}\n                        <div className=\"form-select-wrap\">\n                            <select id={name} name={name} {...attr}>\n                                {defaultValue && <option value=\"\">{defaultValue}</option>}\n                                {_.map(options, (option, index) => (\n                                    <option key={index} value={option}>{option}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                );\n            case 'textarea':\n                return (\n                    <div className=\"form-group\">\n                        {label && <label htmlFor={name} className={classNames({ 'screen-reader-text': hideLabels })}>{label}</label>}\n                        <textarea name={name} id={name} rows=\"5\" {...attr} />\n                        <span className=\"animate-border\" aria-hidden=\"true\" />\n                    </div>\n                );\n            default:\n                return (\n                    <div className=\"form-group\">\n                        {label && <label htmlFor={name} className={classNames({ 'screen-reader-text': hideLabels })}>{label}</label>}\n                        <input type={inputType} name={name} id={name} {...attr} />\n                        <span className=\"animate-border\" aria-hidden=\"true\" />\n                    </div>\n                );\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}