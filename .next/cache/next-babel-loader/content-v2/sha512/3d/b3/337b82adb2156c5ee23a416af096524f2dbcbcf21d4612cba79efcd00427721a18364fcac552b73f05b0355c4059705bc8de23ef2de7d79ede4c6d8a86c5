{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/components/FormSection.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { classNames, markdownify } from '../utils';\nimport FormField from './FormField';\nexport default class FormSection extends React.Component {\n  render() {\n    const section = _.get(this.props, 'section');\n\n    const sectionId = _.get(section, 'section_id');\n\n    const title = _.get(section, 'title');\n\n    const subtitle = _.get(section, 'subtitle');\n\n    const content = _.get(section, 'content');\n\n    const hasText = title || subtitle || content;\n\n    const formId = _.get(section, 'form_id');\n\n    const formAction = _.get(section, 'form_action');\n\n    const formFields = _.get(section, 'form_fields');\n\n    const submitLabel = _.get(section, 'submit_label');\n\n    const formHoneypotInputId = formId + '-honeypot';\n    const formHoneypotLabelId = formId + '-honeypot-label';\n    const formHoneypotName = formId + '-bot-field';\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: sectionId,\n      className: \"section section--form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container container--lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames({\n            'grid': hasText\n          }),\n          children: [hasText && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section__content cell\",\n            children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section__title line-top\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 43\n            }, this), subtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"section__subtitle\",\n              children: subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 46\n            }, this), content && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section__body text-block\",\n              children: markdownify(content)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classNames('section__form-container', {\n              'cell': hasText\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n              name: formId,\n              id: formId\n            }, formAction ? {\n              action: formAction\n            } : null), {}, {\n              method: \"POST\",\n              \"data-netlify\": \"true\",\n              \"data-netlify-honeypot\": formHoneypotName,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"screen-reader-text\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  id: formHoneypotLabelId,\n                  htmlFor: formHoneypotInputId,\n                  children: [\"Don't fill this out if you're human:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    \"aria-labelledby\": formHoneypotLabelId,\n                    id: formHoneypotInputId,\n                    name: formHoneypotName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"hidden\",\n                name: \"form-name\",\n                value: formId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), _.map(formFields, (field, index) => /*#__PURE__*/_jsxDEV(FormField, {\n                field: field,\n                section: section\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-submit\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"button button--primary\",\n                  children: submitLabel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this)]\n            }), void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/components/FormSection.js"],"names":["React","_","classNames","markdownify","FormField","FormSection","Component","render","section","get","props","sectionId","title","subtitle","content","hasText","formId","formAction","formFields","submitLabel","formHoneypotInputId","formHoneypotLabelId","formHoneypotName","action","map","field","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nimport { classNames, markdownify } from '../utils';\nimport FormField from './FormField';\n\nexport default class FormSection extends React.Component {\n    render() {\n        const section = _.get(this.props, 'section');\n        const sectionId = _.get(section, 'section_id');\n        const title = _.get(section, 'title');\n        const subtitle = _.get(section, 'subtitle');\n        const content = _.get(section, 'content');\n        const hasText = title || subtitle || content;\n        const formId = _.get(section, 'form_id');\n        const formAction = _.get(section, 'form_action');\n        const formFields = _.get(section, 'form_fields');\n        const submitLabel = _.get(section, 'submit_label');\n        const formHoneypotInputId = formId + '-honeypot';\n        const formHoneypotLabelId = formId + '-honeypot-label';\n        const formHoneypotName = formId + '-bot-field';\n\n        return (\n            <section id={sectionId} className=\"section section--form\">\n                <div className=\"container container--lg\">\n                    <div className={classNames({ 'grid': hasText })}>\n                        {hasText && (\n                            <div className=\"section__content cell\">\n                                {title && <h2 className=\"section__title line-top\">{title}</h2>}\n                                {subtitle && <p className=\"section__subtitle\">{subtitle}</p>}\n                                {content && (\n                                    <div className=\"section__body text-block\">\n                                        {markdownify(content)}\n                                    </div>\n                                )}\n                            </div>\n                        )}\n                        <div className={classNames('section__form-container', { 'cell': hasText })}>\n                            <form\n                                name={formId}\n                                id={formId}\n                                {...(formAction ? ({ action: formAction }) : null)}\n                                method=\"POST\"\n                                data-netlify=\"true\"\n                                data-netlify-honeypot={formHoneypotName}\n                            >\n                                <div className=\"screen-reader-text\">\n                                    <label id={formHoneypotLabelId} htmlFor={formHoneypotInputId}>\n                                        Don't fill this out if you're human:\n                                        <input\n                                            aria-labelledby={formHoneypotLabelId}\n                                            id={formHoneypotInputId}\n                                            name={formHoneypotName}\n                                        />\n                                    </label>\n                                </div>\n                                <input type=\"hidden\" name=\"form-name\" value={formId} />\n                                {_.map(formFields, (field, index) => (\n                                    <FormField key={index} field={field} section={section} />\n                                ))}\n                                <div className=\"form-submit\">\n                                    <button type=\"submit\" className=\"button button--primary\">\n                                        {submitLabel}\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}