{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/node_modules/.pnpm/@babel+runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/node_modules/.pnpm/@babel+runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/node_modules/.pnpm/@babel+runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/node_modules/.pnpm/@babel+runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/node_modules/.pnpm/@babel+runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/layouts/project.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport components, { Layout } from '../components/index';\nimport { getPageUrl } from '../utils';\nimport PortfolioItem from '../components/PortfolioItem';\n\nvar Project = /*#__PURE__*/function (_React$Component) {\n  _inherits(Project, _React$Component);\n\n  var _super = _createSuper(Project);\n\n  function Project() {\n    _classCallCheck(this, Project);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Project, [{\n    key: \"renderProjectNavLinks\",\n    value: function renderProjectNavLinks(project, index, projects, projectCount, currentProjectUrl) {\n      var projectUrl = getPageUrl(project);\n\n      if (projectUrl !== currentProjectUrl) {\n        return null;\n      }\n\n      var prevIndex = index - 1;\n      var prevProject = index !== 0 ? projects[prevIndex] : null;\n      var nextIndex = index + 1;\n      var nextProject = index < projectCount - 1 ? projects[nextIndex] : null;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid portfolio-feed portfolio-feed--tiles\",\n        children: [prevProject && /*#__PURE__*/_jsxDEV(PortfolioItem, {\n          project: prevProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 33\n        }, this), nextProject && /*#__PURE__*/_jsxDEV(PortfolioItem, {\n          project: nextProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var data = _.get(this.props, 'data');\n\n      var config = _.get(data, 'config');\n\n      var page = _.get(this.props, 'page');\n\n      var title = _.get(page, 'title');\n\n      var subtitle = _.get(page, 'subtitle');\n\n      var sections = _.get(page, 'sections');\n\n      var projectUrl = getPageUrl(page);\n\n      var projects = _.orderBy(_.get(this.props, 'projects', []), 'date', 'desc');\n\n      var projectCount = _.size(projects);\n\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        page: page,\n        config: config,\n        children: [/*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"project\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"project__header\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container container--md\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"project__title line-top\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 29\n              }, this), subtitle && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"project__subtitle\",\n                children: subtitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project__body\",\n            children: _.map(sections, function (section, index) {\n              var sectionType = _.get(section, 'type');\n\n              var component = _.upperFirst(_.camelCase(sectionType));\n\n              if (!component) {\n                throw new Error(\"page section does not have the 'type' property, page: \".concat(projectUrl));\n              }\n\n              var Component = components[component];\n\n              if (!Component) {\n                throw new Error(\"no component matching the page section's type: \".concat(sectionType));\n              }\n\n              return /*#__PURE__*/_jsxDEV(Component, {\n                section: section,\n                data: data\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 36\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), projectCount > 1 && /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"section section--portfolio\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container container--lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section__title line-top\",\n              children: \"More Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), _.map(projects, function (project, index) {\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: _this.renderProjectNavLinks(project, index, projects, projectCount, projectUrl)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Project;\n}(React.Component);\n\nexport { Project as default };","map":{"version":3,"sources":["/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/layouts/project.js"],"names":["React","_","components","Layout","getPageUrl","PortfolioItem","Project","project","index","projects","projectCount","currentProjectUrl","projectUrl","prevIndex","prevProject","nextIndex","nextProject","data","get","props","config","page","title","subtitle","sections","orderBy","size","map","section","sectionType","component","upperFirst","camelCase","Error","Component","renderProjectNavLinks"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nimport components, { Layout } from '../components/index';\nimport { getPageUrl } from '../utils';\n\nimport PortfolioItem from '../components/PortfolioItem';\n\nexport default class Project extends React.Component {\n    renderProjectNavLinks(project, index, projects, projectCount, currentProjectUrl) {\n        const projectUrl = getPageUrl(project);\n        if (projectUrl !== currentProjectUrl) {\n            return null;\n        }\n        const prevIndex = index - 1;\n        const prevProject = (index !== 0) ? projects[prevIndex] : null;\n        const nextIndex = index + 1;\n        const nextProject = (index < projectCount - 1) ? projects[nextIndex] : null;\n\n        return (\n            <div className=\"grid portfolio-feed portfolio-feed--tiles\">\n                {prevProject && <PortfolioItem project={prevProject} />}\n                {nextProject && <PortfolioItem project={nextProject} />}\n            </div>\n        );\n    }\n\n    render() {\n        const data = _.get(this.props, 'data');\n        const config = _.get(data, 'config');\n        const page = _.get(this.props, 'page');\n        const title = _.get(page, 'title');\n        const subtitle = _.get(page, 'subtitle');\n        const sections = _.get(page, 'sections');\n        const projectUrl = getPageUrl(page);\n        const projects = _.orderBy(_.get(this.props, 'projects', []), 'date', 'desc');\n        const projectCount = _.size(projects);\n\n        return (\n            <Layout page={page} config={config}>\n                <article className=\"project\">\n                    <header className=\"project__header\">\n                        <div className=\"container container--md\">\n                            <h1 className=\"project__title line-top\">{title}</h1>\n                            {subtitle && (\n                                <div className=\"project__subtitle\">\n                                    {subtitle}\n                                </div>\n                            )}\n                        </div>\n                    </header>\n                    <div className=\"project__body\">\n                        {_.map(sections, (section, index) => {\n                            const sectionType = _.get(section, 'type');\n                            const component = _.upperFirst(_.camelCase(sectionType));\n                            if (!component) {\n                                throw new Error(`page section does not have the 'type' property, page: ${projectUrl}`);\n                            }\n                            const Component = components[component];\n                            if (!Component) {\n                                throw new Error(`no component matching the page section's type: ${sectionType}`);\n                            }\n                            return <Component key={index} section={section} data={data} />;\n                        })}\n                    </div>\n                </article>\n                {(projectCount > 1) && (\n                    <nav className=\"section section--portfolio\">\n                        <div className=\"container container--lg\">\n                            <h2 className=\"section__title line-top\">More Projects</h2>\n                            {_.map(projects, (project, index) => (\n                                <React.Fragment key={index}>\n                                    {this.renderProjectNavLinks(project, index, projects, projectCount, projectUrl)}\n                                </React.Fragment>\n                            ))}\n                        </div>\n                    </nav>\n                )}\n            </Layout>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}