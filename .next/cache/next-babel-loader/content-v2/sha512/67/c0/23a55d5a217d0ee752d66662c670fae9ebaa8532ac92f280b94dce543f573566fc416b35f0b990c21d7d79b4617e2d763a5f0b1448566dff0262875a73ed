{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/components/TestimonialsSection.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport { withPrefix } from '../utils';\nexport default class TestimonialsSection extends React.Component {\n  renderTestimonial(testimonial) {\n    const content = _.get(testimonial, 'content');\n\n    const avatar = _.get(testimonial, 'avatar');\n\n    const avatarAlt = _.get(testimonial, 'avatar_alt', '');\n\n    const author = _.get(testimonial, 'author');\n\n    const position = _.get(testimonial, 'position');\n\n    return /*#__PURE__*/_jsxDEV(\"blockquote\", {\n      className: \"testimonial\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"testimonial__content\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"testimonial__footer\",\n        children: [avatar && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"testimonial__avatar\",\n          src: withPrefix(avatar),\n          alt: avatarAlt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"testimonial__details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"testimonial__author\",\n            children: author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), position && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"testimonial__position\",\n            children: position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const section = _.get(this.props, 'section');\n\n    const sectionId = _.get(section, 'section_id');\n\n    const title = _.get(section, 'title');\n\n    const subtitle = _.get(section, 'subtitle');\n\n    const testimonials = _.get(section, 'testimonials');\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: sectionId,\n      className: \"section section--testimonials\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container container--lg\",\n        children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section__title line-top\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 31\n        }, this), subtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"section__subtitle\",\n          children: subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 34\n        }, this), !_.isEmpty(testimonials) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          children: _.map(testimonials, (testimonial, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell\",\n            children: this.renderTestimonial(testimonial)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/components/TestimonialsSection.js"],"names":["React","_","withPrefix","TestimonialsSection","Component","renderTestimonial","testimonial","content","get","avatar","avatarAlt","author","position","render","section","props","sectionId","title","subtitle","testimonials","isEmpty","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nimport { withPrefix } from '../utils';\n\nexport default class TestimonialsSection extends React.Component {\n    renderTestimonial(testimonial) {\n        const content = _.get(testimonial, 'content');\n        const avatar = _.get(testimonial, 'avatar');\n        const avatarAlt = _.get(testimonial, 'avatar_alt', '');\n        const author = _.get(testimonial, 'author');\n        const position = _.get(testimonial, 'position');\n\n        return (\n            <blockquote className=\"testimonial\">\n                <p className=\"testimonial__content\">{content}</p>\n                <footer className=\"testimonial__footer\">\n                    {avatar && <img className=\"testimonial__avatar\" src={withPrefix(avatar)} alt={avatarAlt} />}\n                    <div className=\"testimonial__details\">\n                        <div className=\"testimonial__author\">\n                            {author}\n                        </div>\n                        {position && (\n                            <div className=\"testimonial__position\">\n                                {position}\n                            </div>\n                        )}\n                    </div>\n                </footer>\n            </blockquote>\n        );\n    }\n\n    render() {\n        const section = _.get(this.props, 'section');\n        const sectionId = _.get(section, 'section_id');\n        const title = _.get(section, 'title');\n        const subtitle = _.get(section, 'subtitle');\n        const testimonials = _.get(section, 'testimonials');\n\n        return (\n            <section id={sectionId} className=\"section section--testimonials\">\n                <div className=\"container container--lg\">\n                    {title && <h2 className=\"section__title line-top\">{title}</h2>}\n                    {subtitle && <p className=\"section__subtitle\">{subtitle}</p>}\n                    {!_.isEmpty(testimonials) && (\n                        <div className=\"grid\">\n                            {_.map(testimonials, (testimonial, index) => (\n                                <div key={index} className=\"cell\">\n                                    {this.renderTestimonial(testimonial)}\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </div>\n            </section>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}