{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/components/TestimonialsSection.js\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { withPrefix } from \"../utils\";\nexport default class TestimonialsSection extends React.Component {\n  renderTestimonial(testimonial) {\n    const content = _.get(testimonial, \"content\");\n\n    const avatar = _.get(testimonial, \"avatar\");\n\n    const avatarAlt = _.get(testimonial, \"avatar_alt\", \"\");\n\n    const author = _.get(testimonial, \"author\");\n\n    const position = _.get(testimonial, \"position\");\n\n    return /*#__PURE__*/_jsxDEV(\"blockquote\", {\n      className: \"testimonial\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"testimonial__content\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"testimonial__footer\",\n        children: [avatar && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"testimonial__avatar\",\n          src: withPrefix(avatar),\n          alt: avatarAlt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"testimonial__details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"testimonial__author\",\n            children: author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), position && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"testimonial__position\",\n            children: position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const section = _.get(this.props, \"section\");\n\n    const sectionId = _.get(section, \"section_id\");\n\n    const title = _.get(section, \"title\");\n\n    const subtitle = _.get(section, \"subtitle\");\n\n    const testimonials = _.get(section, \"testimonials\");\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: sectionId,\n      className: \"section section--testimonials\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container container--lg\",\n        children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section__title line-top\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), subtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"section__subtitle\",\n          children: subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 24\n        }, this), !_.isEmpty(testimonials) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          children: _.map(testimonials, (testimonial, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell\",\n            children: this.renderTestimonial(testimonial)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/components/TestimonialsSection.js"],"names":["React","_","withPrefix","TestimonialsSection","Component","renderTestimonial","testimonial","content","get","avatar","avatarAlt","author","position","render","section","props","sectionId","title","subtitle","testimonials","isEmpty","map","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\n\nimport { withPrefix } from \"../utils\";\n\nexport default class TestimonialsSection extends React.Component {\n  renderTestimonial(testimonial) {\n    const content = _.get(testimonial, \"content\");\n    const avatar = _.get(testimonial, \"avatar\");\n    const avatarAlt = _.get(testimonial, \"avatar_alt\", \"\");\n    const author = _.get(testimonial, \"author\");\n    const position = _.get(testimonial, \"position\");\n\n    return (\n      <blockquote className=\"testimonial\">\n        <p className=\"testimonial__content\">{content}</p>\n        <footer className=\"testimonial__footer\">\n          {avatar && (\n            <img\n              className=\"testimonial__avatar\"\n              src={withPrefix(avatar)}\n              alt={avatarAlt}\n            />\n          )}\n          <div className=\"testimonial__details\">\n            <div className=\"testimonial__author\">{author}</div>\n            {position && (\n              <div className=\"testimonial__position\">{position}</div>\n            )}\n          </div>\n        </footer>\n      </blockquote>\n    );\n  }\n\n  render() {\n    const section = _.get(this.props, \"section\");\n    const sectionId = _.get(section, \"section_id\");\n    const title = _.get(section, \"title\");\n    const subtitle = _.get(section, \"subtitle\");\n    const testimonials = _.get(section, \"testimonials\");\n\n    return (\n      <section id={sectionId} className=\"section section--testimonials\">\n        <div className=\"container container--lg\">\n          {title && <h2 className=\"section__title line-top\">{title}</h2>}\n          {subtitle && <p className=\"section__subtitle\">{subtitle}</p>}\n          {!_.isEmpty(testimonials) && (\n            <div className=\"grid\">\n              {_.map(testimonials, (testimonial, index) => (\n                <div key={index} className=\"cell\">\n                  {this.renderTestimonial(testimonial)}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}