{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/components/PortfolioSection.js\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { Link, withPrefix } from \"../utils\";\nimport PortfolioItem from \"./PortfolioItem\";\nexport default class PortfolioSection extends React.Component {\n  renderProject(project, index, projectCount, viewAllLabel, viewAllUrl) {\n    if (index === projectCount - 1 && viewAllLabel && viewAllUrl) {\n      const thumbImage = _.get(project, \"thumb_image\");\n\n      const thumbImageAlt = _.get(project, \"thumb_image_alt\", \"\");\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"cell project-card\",\n          children: thumbImage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-card__image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: withPrefix(thumbImage),\n              alt: thumbImageAlt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(PortfolioItem, {\n        project: project\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  render() {\n    const section = _.get(this.props, \"section\");\n\n    const sectionId = _.get(section, \"section_id\");\n\n    const title = _.get(section, \"title\");\n\n    const subtitle = _.get(section, \"subtitle\");\n\n    const layoutStyle = _.get(section, \"layout_style\", \"mosaic\");\n\n    const viewAllLabel = _.get(section, \"view_all_label\");\n\n    const viewAllUrl = _.get(section, \"view_all_url\");\n\n    const projects = _.orderBy(_.get(this.props, \"projects\", []), \"date\", \"desc\");\n\n    const projectCount = _.size(projects);\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: sectionId,\n      className: \"section section--portfolio\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container container--lg\",\n        children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section__title line-top\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), subtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"section__subtitle\",\n          children: subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `grid portfolio-feed portfolio-feed--${layoutStyle}`,\n          children: _.map(projects, (project, index) => this.renderProject(project, index, projectCount, viewAllLabel, viewAllUrl))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/components/PortfolioSection.js"],"names":["React","_","Link","withPrefix","PortfolioItem","PortfolioSection","Component","renderProject","project","index","projectCount","viewAllLabel","viewAllUrl","thumbImage","get","thumbImageAlt","render","section","props","sectionId","title","subtitle","layoutStyle","projects","orderBy","size","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\n\nimport { Link, withPrefix } from \"../utils\";\nimport PortfolioItem from \"./PortfolioItem\";\n\nexport default class PortfolioSection extends React.Component {\n  renderProject(project, index, projectCount, viewAllLabel, viewAllUrl) {\n    if (index === projectCount - 1 && viewAllLabel && viewAllUrl) {\n      const thumbImage = _.get(project, \"thumb_image\");\n      const thumbImageAlt = _.get(project, \"thumb_image_alt\", \"\");\n\n      return (\n        <>\n          <article key={index} className=\"cell project-card\">\n            {thumbImage && (\n              <div className=\"project-card__image\">\n                <img src={withPrefix(thumbImage)} alt={thumbImageAlt} />\n              </div>\n            )}\n          </article>\n        </>\n      );\n    } else {\n      return <PortfolioItem key={index} project={project} />;\n    }\n  }\n\n  render() {\n    const section = _.get(this.props, \"section\");\n    const sectionId = _.get(section, \"section_id\");\n    const title = _.get(section, \"title\");\n    const subtitle = _.get(section, \"subtitle\");\n    const layoutStyle = _.get(section, \"layout_style\", \"mosaic\");\n    const viewAllLabel = _.get(section, \"view_all_label\");\n    const viewAllUrl = _.get(section, \"view_all_url\");\n    const projects = _.orderBy(\n      _.get(this.props, \"projects\", []),\n      \"date\",\n      \"desc\"\n    );\n    const projectCount = _.size(projects);\n\n    return (\n      <section id={sectionId} className=\"section section--portfolio\">\n        <div className=\"container container--lg\">\n          {title && <h2 className=\"section__title line-top\">{title}</h2>}\n          {subtitle && <p className=\"section__subtitle\">{subtitle}</p>}\n          <div className={`grid portfolio-feed portfolio-feed--${layoutStyle}`}>\n            {_.map(projects, (project, index) =>\n              this.renderProject(\n                project,\n                index,\n                projectCount,\n                viewAllLabel,\n                viewAllUrl\n              )\n            )}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}