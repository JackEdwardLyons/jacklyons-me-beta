{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport Router from 'next/router';\nimport _ from 'lodash';\nimport { Link, withPrefix, classNames, getPageUrl } from '../utils';\nimport Action from './Action';\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleWindowResize = this.handleWindowResize.bind(this);\n    this.handleRouteChange = this.handleRouteChange.bind(this);\n    this.menuOpenRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowResize, true);\n    Router.events.on('routeChangeStart', this.handleRouteChange);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowResize, true);\n    Router.events.off('routeChangeStart', this.handleRouteChange);\n  }\n\n  handleWindowResize() {\n    const menuOpenElm = _.get(this.menuOpenRef, 'current.offsetParent');\n\n    if (menuOpenElm === null) {\n      document.body.classList.remove('js-nav-open');\n    }\n  }\n\n  handleRouteChange() {\n    document.body.classList.remove('js-nav-open');\n  }\n\n  handleMenuToggle(event) {\n    event.preventDefault();\n    document.body.classList.toggle('js-nav-open');\n  }\n\n  render() {\n    const page = _.get(this.props, 'page');\n\n    const pageUrl = _.trim(getPageUrl(page), '/');\n\n    const config = _.get(this.props, 'config');\n\n    const header = _.get(config, 'header');\n\n    const logo = _.get(header, 'logo_img');\n\n    const logoAlt = _.get(header, 'logo_img_alt', '');\n\n    const title = _.get(header, 'title');\n\n    const hasNav = _.get(header, 'has_nav');\n\n    const navLinks = _.get(header, 'nav_links');\n\n    return /*#__PURE__*/_jsx(\"header\", {\n      id: \"masthead\",\n      className: \"site-header container\",\n      children: /*#__PURE__*/_jsxs(\"nav\", {\n        className: \"navbar\",\n        \"aria-label\": \"Main Navigation\",\n        children: [logo ? /*#__PURE__*/_jsx(\"div\", {\n          className: \"navbar__logo\",\n          children: /*#__PURE__*/_jsx(Link, {\n            href: withPrefix('/'),\n            children: /*#__PURE__*/_jsx(\"img\", {\n              src: withPrefix(logo),\n              alt: logoAlt\n            })\n          })\n        }) : /*#__PURE__*/_jsx(\"div\", {\n          className: \"navbar__title\",\n          children: /*#__PURE__*/_jsx(Link, {\n            href: withPrefix('/'),\n            children: title\n          })\n        }), hasNav && !_.isEmpty(navLinks) && /*#__PURE__*/_jsxs(React.Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"button\", {\n            id: \"navbar__open\",\n            className: \"navbar__toggle\",\n            ref: this.menuOpenRef,\n            onClick: this.handleMenuToggle.bind(this),\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              className: \"screen-reader-text\",\n              children: \"Open Menu\"\n            }), /*#__PURE__*/_jsx(\"span\", {\n              className: \"icon-menu\",\n              \"aria-hidden\": \"true\"\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"navbar__menu-container\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"navbar__scroller\",\n              children: [/*#__PURE__*/_jsxs(\"button\", {\n                id: \"navbar__close\",\n                className: \"navbar__toggle\",\n                onClick: this.handleMenuToggle.bind(this),\n                children: [/*#__PURE__*/_jsx(\"span\", {\n                  className: \"screen-reader-text\",\n                  children: \"Close Menu\"\n                }), /*#__PURE__*/_jsx(\"span\", {\n                  className: \"icon-close\",\n                  \"aria-hidden\": \"true\"\n                })]\n              }), /*#__PURE__*/_jsx(\"ul\", {\n                className: \"navbar__menu menu\",\n                children: _.map(navLinks, (action, index) => {\n                  const actionUrl = _.trim(_.get(action, 'url'), '/');\n\n                  const actionStyle = _.get(action, 'style', 'link');\n\n                  return /*#__PURE__*/_jsx(\"li\", {\n                    className: classNames('menu__item', {\n                      'menu__item--current': pageUrl === actionUrl,\n                      'menu__item--button': actionStyle !== 'link'\n                    }),\n                    children: /*#__PURE__*/_jsx(Action, {\n                      action: action\n                    })\n                  }, index);\n                })\n              })]\n            })\n          })]\n        })]\n      })\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}