{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/layouts/post.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport { Layout } from '../components/index';\nimport { withPrefix, markdownify, getPageUrl } from '../utils';\nimport BlogFeedItem from '../components/BlogFeedItem';\nexport default class Post extends React.Component {\n  renderPostNavLinks(post, index, posts, postCount, currentPostUrl) {\n    const postUrl = getPageUrl(post);\n\n    if (postUrl !== currentPostUrl) {\n      return null;\n    }\n\n    const prevIndex = index - 1;\n    const prevPost = index !== 0 ? posts[prevIndex] : null;\n    const nextIndex = index + 1;\n    const nextPost = index < postCount - 1 ? posts[nextIndex] : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid post-feed post-feed--col-two\",\n      children: [prevPost && /*#__PURE__*/_jsxDEV(BlogFeedItem, {\n        post: prevPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 30\n      }, this), nextPost && /*#__PURE__*/_jsxDEV(BlogFeedItem, {\n        post: nextPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const data = _.get(this.props, 'data');\n\n    const config = _.get(data, 'config');\n\n    const page = _.get(this.props, 'page');\n\n    const title = _.get(page, 'title');\n\n    const subtitle = _.get(page, 'subtitle');\n\n    const image = _.get(page, 'image');\n\n    const imageAlt = _.get(page, 'image_alt', '');\n\n    const date = _.get(page, 'date');\n\n    const dateTimeAttr = moment(date).strftime('%Y-%m-%d %H:%M');\n    const formattedDate = moment(date).strftime('%A, %B %e, %Y');\n\n    const markdownContent = _.get(page, 'markdown_content');\n\n    const postUrl = getPageUrl(page);\n\n    const posts = _.orderBy(_.get(this.props, 'posts', []), 'date', 'desc');\n\n    const postCount = _.size(posts);\n\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      page: page,\n      config: config,\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"post__header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container container--md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"post__title line-top\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), subtitle && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__subtitle\",\n              children: subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__image\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container container--lg\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: withPrefix(image),\n              alt: imageAlt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), markdownContent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__body text-block\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container container--md\",\n            children: markdownify(markdownContent)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"post__meta\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container container--md\",\n            children: [\"Posted on \", /*#__PURE__*/_jsxDEV(\"time\", {\n              className: \"published\",\n              dateTime: dateTimeAttr,\n              children: formattedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), postCount > 1 && /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"section section--posts\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container container--lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section__title line-top\",\n            children: \"Read Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), _.map(posts, (post, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: this.renderPostNavLinks(post, index, posts, postCount, postUrl)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/layouts/post.js"],"names":["React","_","moment","Layout","withPrefix","markdownify","getPageUrl","BlogFeedItem","Post","Component","renderPostNavLinks","post","index","posts","postCount","currentPostUrl","postUrl","prevIndex","prevPost","nextIndex","nextPost","render","data","get","props","config","page","title","subtitle","image","imageAlt","date","dateTimeAttr","strftime","formattedDate","markdownContent","orderBy","size","map"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,QAAoD,UAApD;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,eAAe,MAAMC,IAAN,SAAmBR,KAAK,CAACS,SAAzB,CAAmC;AAC9CC,EAAAA,kBAAkB,CAACC,IAAD,EAAOC,KAAP,EAAcC,KAAd,EAAqBC,SAArB,EAAgCC,cAAhC,EAAgD;AAC9D,UAAMC,OAAO,GAAGV,UAAU,CAACK,IAAD,CAA1B;;AACA,QAAIK,OAAO,KAAKD,cAAhB,EAAgC;AAC5B,aAAO,IAAP;AACH;;AACD,UAAME,SAAS,GAAGL,KAAK,GAAG,CAA1B;AACA,UAAMM,QAAQ,GAAIN,KAAK,KAAK,CAAX,GAAgBC,KAAK,CAACI,SAAD,CAArB,GAAmC,IAApD;AACA,UAAME,SAAS,GAAGP,KAAK,GAAG,CAA1B;AACA,UAAMQ,QAAQ,GAAIR,KAAK,GAAGE,SAAS,GAAG,CAArB,GAA0BD,KAAK,CAACM,SAAD,CAA/B,GAA6C,IAA9D;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA,iBACKD,QAAQ,iBAAI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,cADjB,EAEKE,QAAQ,iBAAI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAGrB,CAAC,CAACsB,GAAF,CAAM,KAAKC,KAAX,EAAkB,MAAlB,CAAb;;AACA,UAAMC,MAAM,GAAGxB,CAAC,CAACsB,GAAF,CAAMD,IAAN,EAAY,QAAZ,CAAf;;AACA,UAAMI,IAAI,GAAGzB,CAAC,CAACsB,GAAF,CAAM,KAAKC,KAAX,EAAkB,MAAlB,CAAb;;AACA,UAAMG,KAAK,GAAG1B,CAAC,CAACsB,GAAF,CAAMG,IAAN,EAAY,OAAZ,CAAd;;AACA,UAAME,QAAQ,GAAG3B,CAAC,CAACsB,GAAF,CAAMG,IAAN,EAAY,UAAZ,CAAjB;;AACA,UAAMG,KAAK,GAAG5B,CAAC,CAACsB,GAAF,CAAMG,IAAN,EAAY,OAAZ,CAAd;;AACA,UAAMI,QAAQ,GAAG7B,CAAC,CAACsB,GAAF,CAAMG,IAAN,EAAY,WAAZ,EAAyB,EAAzB,CAAjB;;AACA,UAAMK,IAAI,GAAG9B,CAAC,CAACsB,GAAF,CAAMG,IAAN,EAAY,MAAZ,CAAb;;AACA,UAAMM,YAAY,GAAG9B,MAAM,CAAC6B,IAAD,CAAN,CAAaE,QAAb,CAAsB,gBAAtB,CAArB;AACA,UAAMC,aAAa,GAAGhC,MAAM,CAAC6B,IAAD,CAAN,CAAaE,QAAb,CAAsB,eAAtB,CAAtB;;AACA,UAAME,eAAe,GAAGlC,CAAC,CAACsB,GAAF,CAAMG,IAAN,EAAY,kBAAZ,CAAxB;;AACA,UAAMV,OAAO,GAAGV,UAAU,CAACoB,IAAD,CAA1B;;AACA,UAAMb,KAAK,GAAGZ,CAAC,CAACmC,OAAF,CAAUnC,CAAC,CAACsB,GAAF,CAAM,KAAKC,KAAX,EAAkB,OAAlB,EAA2B,EAA3B,CAAV,EAA0C,MAA1C,EAAkD,MAAlD,CAAd;;AACA,UAAMV,SAAS,GAAGb,CAAC,CAACoC,IAAF,CAAOxB,KAAP,CAAlB;;AAEA,wBACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEa,IAAd;AAAoB,MAAA,MAAM,EAAED,MAA5B;AAAA,8BACI;AAAS,QAAA,SAAS,EAAC,MAAnB;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,sBAAd;AAAA,wBAAsCE;AAAtC;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKC,QAAQ,iBACL;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,wBACKA;AADL;AAAA;AAAA;AAAA;AAAA,oBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,EAWKC,KAAK,iBACF;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEzB,UAAU,CAACyB,KAAD,CAApB;AAA6B,cAAA,GAAG,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAZR,EAkBKK,eAAe,iBACZ;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,sBACK9B,WAAW,CAAC8B,eAAD;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAnBR,eAyBI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,kDACc;AAAM,cAAA,SAAS,EAAC,WAAhB;AAA4B,cAAA,QAAQ,EAAEH,YAAtC;AAAA,wBAAqDE;AAArD;AAAA;AAAA;AAAA;AAAA,oBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAgCMpB,SAAS,GAAG,CAAb,iBACG;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKb,CAAC,CAACqC,GAAF,CAAMzB,KAAN,EAAa,CAACF,IAAD,EAAOC,KAAP,kBACV,QAAC,KAAD,CAAO,QAAP;AAAA,sBACK,KAAKF,kBAAL,CAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,KAArC,EAA4CC,SAA5C,EAAuDE,OAAvD;AADL,aAAqBJ,KAArB;AAAA;AAAA;AAAA;AAAA,kBADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAjCR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA+CH;;AAlF6C","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\n\nimport { Layout } from '../components/index';\nimport { withPrefix, markdownify, getPageUrl } from '../utils';\n\nimport BlogFeedItem from '../components/BlogFeedItem';\n\nexport default class Post extends React.Component {\n    renderPostNavLinks(post, index, posts, postCount, currentPostUrl) {\n        const postUrl = getPageUrl(post);\n        if (postUrl !== currentPostUrl) {\n            return null;\n        }\n        const prevIndex = index - 1;\n        const prevPost = (index !== 0) ? posts[prevIndex] : null;\n        const nextIndex = index + 1;\n        const nextPost = (index < postCount - 1) ? posts[nextIndex] : null;\n\n        return (\n            <div className=\"grid post-feed post-feed--col-two\">\n                {prevPost && <BlogFeedItem post={prevPost} />}\n                {nextPost && <BlogFeedItem post={nextPost} />}\n            </div>\n        );\n    }\n\n    render() {\n        const data = _.get(this.props, 'data');\n        const config = _.get(data, 'config');\n        const page = _.get(this.props, 'page');\n        const title = _.get(page, 'title');\n        const subtitle = _.get(page, 'subtitle');\n        const image = _.get(page, 'image');\n        const imageAlt = _.get(page, 'image_alt', '');\n        const date = _.get(page, 'date');\n        const dateTimeAttr = moment(date).strftime('%Y-%m-%d %H:%M');\n        const formattedDate = moment(date).strftime('%A, %B %e, %Y');\n        const markdownContent = _.get(page, 'markdown_content');\n        const postUrl = getPageUrl(page);\n        const posts = _.orderBy(_.get(this.props, 'posts', []), 'date', 'desc');\n        const postCount = _.size(posts);\n\n        return (\n            <Layout page={page} config={config}>\n                <article className=\"post\">\n                    <header className=\"post__header\">\n                        <div className=\"container container--md\">\n                            <h1 className=\"post__title line-top\">{title}</h1>\n                            {subtitle && (\n                                <div className=\"post__subtitle\">\n                                    {subtitle}\n                                </div>\n                            )}\n                        </div>\n                    </header>\n                    {image && (\n                        <div className=\"post__image\">\n                            <div className=\"container container--lg\">\n                                <img src={withPrefix(image)} alt={imageAlt} />\n                            </div>\n                        </div>\n                    )}\n                    {markdownContent && (\n                        <div className=\"post__body text-block\">\n                            <div className=\"container container--md\">\n                                {markdownify(markdownContent)}\n                            </div>\n                        </div>\n                    )}\n                    <footer className=\"post__meta\">\n                        <div className=\"container container--md\">\n                            Posted on <time className=\"published\" dateTime={dateTimeAttr}>{formattedDate}</time>\n                        </div>\n                    </footer>\n                </article>\n                {(postCount > 1) && (\n                    <nav className=\"section section--posts\">\n                        <div className=\"container container--lg\">\n                            <h2 className=\"section__title line-top\">Read Next</h2>\n                            {_.map(posts, (post, index) => (\n                                <React.Fragment key={index}>\n                                    {this.renderPostNavLinks(post, index, posts, postCount, postUrl)}\n                                </React.Fragment>\n                            ))}\n                        </div>\n                    </nav>\n                )}\n            </Layout>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}