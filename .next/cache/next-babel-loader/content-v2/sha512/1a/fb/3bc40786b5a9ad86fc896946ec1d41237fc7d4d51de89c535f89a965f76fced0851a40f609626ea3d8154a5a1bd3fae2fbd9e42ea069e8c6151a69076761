{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport { Layout } from '../components/index';\nimport { withPrefix, markdownify, getPageUrl } from '../utils';\nimport BlogFeedItem from '../components/BlogFeedItem';\nexport default class Post extends React.Component {\n  renderPostNavLinks(post, index, posts, postCount, currentPostUrl) {\n    const postUrl = getPageUrl(post);\n\n    if (postUrl !== currentPostUrl) {\n      return null;\n    }\n\n    const prevIndex = index - 1;\n    const prevPost = index !== 0 ? posts[prevIndex] : null;\n    const nextIndex = index + 1;\n    const nextPost = index < postCount - 1 ? posts[nextIndex] : null;\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: \"grid post-feed post-feed--col-two\",\n      children: [prevPost && /*#__PURE__*/_jsx(BlogFeedItem, {\n        post: prevPost\n      }), nextPost && /*#__PURE__*/_jsx(BlogFeedItem, {\n        post: nextPost\n      })]\n    });\n  }\n\n  render() {\n    const data = _.get(this.props, 'data');\n\n    const config = _.get(data, 'config');\n\n    const page = _.get(this.props, 'page');\n\n    const title = _.get(page, 'title');\n\n    const subtitle = _.get(page, 'subtitle');\n\n    const image = _.get(page, 'image');\n\n    const imageAlt = _.get(page, 'image_alt', '');\n\n    const date = _.get(page, 'date');\n\n    const dateTimeAttr = moment(date).strftime('%Y-%m-%d %H:%M');\n    const formattedDate = moment(date).strftime('%A, %B %e, %Y');\n\n    const markdownContent = _.get(page, 'markdown_content');\n\n    const postUrl = getPageUrl(page);\n\n    const posts = _.orderBy(_.get(this.props, 'posts', []), 'date', 'desc');\n\n    const postCount = _.size(posts);\n\n    return /*#__PURE__*/_jsxs(Layout, {\n      page: page,\n      config: config,\n      children: [/*#__PURE__*/_jsxs(\"article\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsx(\"header\", {\n          className: \"post__header\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"container container--md\",\n            children: [/*#__PURE__*/_jsx(\"h1\", {\n              className: \"post__title line-top\",\n              children: title\n            }), subtitle && /*#__PURE__*/_jsx(\"div\", {\n              className: \"post__subtitle\",\n              children: subtitle\n            })]\n          })\n        }), image && /*#__PURE__*/_jsx(\"div\", {\n          className: \"post__image\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"container container--lg\",\n            children: /*#__PURE__*/_jsx(\"img\", {\n              src: withPrefix(image),\n              alt: imageAlt\n            })\n          })\n        }), markdownContent && /*#__PURE__*/_jsx(\"div\", {\n          className: \"post__body text-block\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"container container--md\",\n            children: markdownify(markdownContent)\n          })\n        }), /*#__PURE__*/_jsx(\"footer\", {\n          className: \"post__meta\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"container container--md\",\n            children: [\"Posted on \", /*#__PURE__*/_jsx(\"time\", {\n              className: \"published\",\n              dateTime: dateTimeAttr,\n              children: formattedDate\n            })]\n          })\n        })]\n      }), postCount > 1 && /*#__PURE__*/_jsx(\"nav\", {\n        className: \"section section--posts\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"container container--lg\",\n          children: [/*#__PURE__*/_jsx(\"h2\", {\n            className: \"section__title line-top\",\n            children: \"Read Next\"\n          }), _.map(posts, (post, index) => /*#__PURE__*/_jsx(React.Fragment, {\n            children: this.renderPostNavLinks(post, index, posts, postCount, postUrl)\n          }, index))]\n        })\n      })]\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}