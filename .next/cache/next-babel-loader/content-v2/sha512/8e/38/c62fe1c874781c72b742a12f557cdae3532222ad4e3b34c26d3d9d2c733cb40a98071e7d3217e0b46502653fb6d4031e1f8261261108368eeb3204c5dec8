{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/layouts/post.js\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport moment from \"moment-strftime\";\nimport Markdown from \"markdown-to-jsx\";\nimport { Layout } from \"../components/index\";\nimport { withPrefix, getPageUrl } from \"../utils\";\nimport BlogFeedItem from \"../components/BlogFeedItem\";\nimport FreelancerWebComponent from \"../components/FreelancerWebComponent\";\nexport default class Post extends React.Component {\n  renderPostNavLinks(post, index, posts, postCount, currentPostUrl) {\n    const postUrl = getPageUrl(post);\n\n    if (postUrl !== currentPostUrl) {\n      return null;\n    }\n\n    const prevIndex = index - 1;\n    const prevPost = index !== 0 ? posts[prevIndex] : null;\n    const nextIndex = index + 1;\n    const nextPost = index < postCount - 1 ? posts[nextIndex] : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid post-feed post-feed--col-two\",\n      children: [prevPost && /*#__PURE__*/_jsxDEV(BlogFeedItem, {\n        post: prevPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 22\n      }, this), nextPost && /*#__PURE__*/_jsxDEV(BlogFeedItem, {\n        post: nextPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const data = _.get(this.props, \"data\");\n\n    const config = _.get(data, \"config\");\n\n    const page = _.get(this.props, \"page\");\n\n    const title = _.get(page, \"title\");\n\n    const subtitle = _.get(page, \"subtitle\");\n\n    const image = _.get(page, \"image\");\n\n    const imageAlt = _.get(page, \"image_alt\", \"\");\n\n    const date = _.get(page, \"date\");\n\n    const dateTimeAttr = moment(date).strftime(\"%Y-%m-%d %H:%M\");\n    const formattedDate = moment(date).strftime(\"%A, %B %e, %Y\");\n\n    const markdownContent = _.get(page, \"markdown_content\");\n\n    const postUrl = getPageUrl(page);\n\n    const posts = _.orderBy(_.get(this.props, \"posts\", []), \"date\", \"desc\");\n\n    const postCount = _.size(posts);\n\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      page: page,\n      config: config,\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"post__header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container container--md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"post__title line-top\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), subtitle && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__subtitle\",\n              children: subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__image\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container container--lg\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              layout: \"fill\",\n              src: withPrefix(image),\n              alt: imageAlt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), markdownContent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__body text-block\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container container--md\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-content inner-sm\",\n              children: /*#__PURE__*/_jsxDEV(Markdown, {\n                options: {\n                  overrides: {\n                    FreelancerWebComponent: {\n                      component: FreelancerWebComponent\n                    }\n                  }\n                },\n                children: markdownContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"post__meta\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container container--md\",\n            children: [\"Posted on\", \" \", /*#__PURE__*/_jsxDEV(\"time\", {\n              className: \"published\",\n              dateTime: dateTimeAttr,\n              children: formattedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), postCount > 1 && /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"section section--posts\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container container--lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section__title line-top\",\n            children: \"Read Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), _.map(posts, (post, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: this.renderPostNavLinks(post, index, posts, postCount, postUrl)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jack__lyons/Documents/Web Projects/jacklyons-me-2024/src/layouts/post.js"],"names":["React","_","moment","Markdown","Layout","withPrefix","getPageUrl","BlogFeedItem","FreelancerWebComponent","Post","Component","renderPostNavLinks","post","index","posts","postCount","currentPostUrl","postUrl","prevIndex","prevPost","nextIndex","nextPost","render","data","get","props","config","page","title","subtitle","image","imageAlt","date","dateTimeAttr","strftime","formattedDate","markdownContent","orderBy","size","overrides","component","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport moment from \"moment-strftime\";\nimport Markdown from \"markdown-to-jsx\";\nimport { Layout } from \"../components/index\";\nimport { withPrefix, getPageUrl } from \"../utils\";\n\nimport BlogFeedItem from \"../components/BlogFeedItem\";\nimport FreelancerWebComponent from \"../components/FreelancerWebComponent\";\n\nexport default class Post extends React.Component {\n  renderPostNavLinks(post, index, posts, postCount, currentPostUrl) {\n    const postUrl = getPageUrl(post);\n    if (postUrl !== currentPostUrl) {\n      return null;\n    }\n    const prevIndex = index - 1;\n    const prevPost = index !== 0 ? posts[prevIndex] : null;\n    const nextIndex = index + 1;\n    const nextPost = index < postCount - 1 ? posts[nextIndex] : null;\n\n    return (\n      <div className=\"grid post-feed post-feed--col-two\">\n        {prevPost && <BlogFeedItem post={prevPost} />}\n        {nextPost && <BlogFeedItem post={nextPost} />}\n      </div>\n    );\n  }\n\n  render() {\n    const data = _.get(this.props, \"data\");\n    const config = _.get(data, \"config\");\n    const page = _.get(this.props, \"page\");\n    const title = _.get(page, \"title\");\n    const subtitle = _.get(page, \"subtitle\");\n    const image = _.get(page, \"image\");\n    const imageAlt = _.get(page, \"image_alt\", \"\");\n    const date = _.get(page, \"date\");\n    const dateTimeAttr = moment(date).strftime(\"%Y-%m-%d %H:%M\");\n    const formattedDate = moment(date).strftime(\"%A, %B %e, %Y\");\n    const markdownContent = _.get(page, \"markdown_content\");\n    const postUrl = getPageUrl(page);\n    const posts = _.orderBy(_.get(this.props, \"posts\", []), \"date\", \"desc\");\n    const postCount = _.size(posts);\n\n    return (\n      <Layout page={page} config={config}>\n        <article className=\"post\">\n          <header className=\"post__header\">\n            <div className=\"container container--md\">\n              <h1 className=\"post__title line-top\">{title}</h1>\n              {subtitle && <div className=\"post__subtitle\">{subtitle}</div>}\n            </div>\n          </header>\n          {image && (\n            <div className=\"post__image\">\n              <div className=\"container container--lg\">\n                <Image layout=\"fill\" src={withPrefix(image)} alt={imageAlt} />\n              </div>\n            </div>\n          )}\n          {markdownContent && (\n            <div className=\"post__body text-block\">\n              <div className=\"container container--md\">\n                {/* {markdownify(markdownContent)} */}\n\n                <div className=\"post-content inner-sm\">\n                  <Markdown\n                    options={{\n                      overrides: {\n                        FreelancerWebComponent: {\n                          component: FreelancerWebComponent,\n                        },\n                      },\n                    }}\n                  >\n                    {markdownContent}\n                  </Markdown>\n\n                  {/* <Subscribe />/ */}\n                </div>\n              </div>\n            </div>\n          )}\n          <footer className=\"post__meta\">\n            <div className=\"container container--md\">\n              Posted on{\" \"}\n              <time className=\"published\" dateTime={dateTimeAttr}>\n                {formattedDate}\n              </time>\n            </div>\n          </footer>\n        </article>\n        {postCount > 1 && (\n          <nav className=\"section section--posts\">\n            <div className=\"container container--lg\">\n              <h2 className=\"section__title line-top\">Read Next</h2>\n              {_.map(posts, (post, index) => (\n                <React.Fragment key={index}>\n                  {this.renderPostNavLinks(\n                    post,\n                    index,\n                    posts,\n                    postCount,\n                    postUrl\n                  )}\n                </React.Fragment>\n              ))}\n            </div>\n          </nav>\n        )}\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}