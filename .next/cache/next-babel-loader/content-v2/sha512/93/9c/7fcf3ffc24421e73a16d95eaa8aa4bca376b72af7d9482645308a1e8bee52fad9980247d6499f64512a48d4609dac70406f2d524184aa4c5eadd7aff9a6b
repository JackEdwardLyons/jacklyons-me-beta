{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { classNames, markdownify } from '../utils';\nimport FormField from './FormField';\nexport default class FormSection extends React.Component {\n  render() {\n    const section = _.get(this.props, 'section');\n\n    const sectionId = _.get(section, 'section_id');\n\n    const title = _.get(section, 'title');\n\n    const subtitle = _.get(section, 'subtitle');\n\n    const content = _.get(section, 'content');\n\n    const hasText = title || subtitle || content;\n\n    const formId = _.get(section, 'form_id');\n\n    const formAction = _.get(section, 'form_action');\n\n    const formFields = _.get(section, 'form_fields');\n\n    const submitLabel = _.get(section, 'submit_label');\n\n    const formHoneypotInputId = formId + '-honeypot';\n    const formHoneypotLabelId = formId + '-honeypot-label';\n    const formHoneypotName = formId + '-bot-field';\n    return /*#__PURE__*/_jsx(\"section\", {\n      id: sectionId,\n      className: \"section section--form\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"container container--lg\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: classNames({\n            'grid': hasText\n          }),\n          children: [hasText && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"section__content cell\",\n            children: [title && /*#__PURE__*/_jsx(\"h2\", {\n              className: \"section__title line-top\",\n              children: title\n            }), subtitle && /*#__PURE__*/_jsx(\"p\", {\n              className: \"section__subtitle\",\n              children: subtitle\n            }), content && /*#__PURE__*/_jsx(\"div\", {\n              className: \"section__body text-block\",\n              children: markdownify(content)\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: classNames('section__form-container', {\n              'cell': hasText\n            }),\n            children: /*#__PURE__*/_jsxs(\"form\", _objectSpread(_objectSpread({\n              name: formId,\n              id: formId\n            }, formAction ? {\n              action: formAction\n            } : null), {}, {\n              method: \"POST\",\n              \"data-netlify\": \"true\",\n              \"data-netlify-honeypot\": formHoneypotName,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"screen-reader-text\",\n                children: /*#__PURE__*/_jsxs(\"label\", {\n                  id: formHoneypotLabelId,\n                  htmlFor: formHoneypotInputId,\n                  children: [\"Don't fill this out if you're human:\", /*#__PURE__*/_jsx(\"input\", {\n                    \"aria-labelledby\": formHoneypotLabelId,\n                    id: formHoneypotInputId,\n                    name: formHoneypotName\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"hidden\",\n                name: \"form-name\",\n                value: formId\n              }), _.map(formFields, (field, index) => /*#__PURE__*/_jsx(FormField, {\n                field: field,\n                section: section\n              }, index)), /*#__PURE__*/_jsx(\"div\", {\n                className: \"form-submit\",\n                children: /*#__PURE__*/_jsx(\"button\", {\n                  type: \"submit\",\n                  className: \"button button--primary\",\n                  children: submitLabel\n                })\n              })]\n            }))\n          })]\n        })\n      })\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}